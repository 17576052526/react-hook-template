1.App.js 只设置写路由，内容如下（懒加载方式）：
import React, { Suspense, lazy } from 'react';
import { HashRouter as Router, Route, Link, NavLink, Redirect } from "react-router-dom";

let Page1 = lazy(() => import('./components/test/page1'))
let Page2 = lazy(() => import('./components/test/page2'))

//App.js 里面只设置路由，其他不在此处写
function App() {
    return (
        <Suspense fallback="">
            <Router>
                {/*<Route path="/" exact component={Page1}></Route>*/}{/*设置主页*/}
                <Route path="/page1" component={Page1}></Route>
                <Route path="/page2" component={Page2}></Route>
            </Router>
        </Suspense>
    );
}

export default App;

2.设置代理，解决跨域问题
2.1npm install http-proxy-middleware --save
2.2 src 目录下，新建 setupProxy.js，内容如下：
//设置代理，允许跨域请求
const proxy = require('http-proxy-middleware');
module.exports = function (app) {
    app.use(
        '/api',
        proxy.createProxyMiddleware({
            target: 'http://localhost:62881',//服务器地址
            changeOrigin: true,
            pathRewrite: { '^/api': '' }
        })
    );
    //此处能设置多个代理请求，axios.defaults.baseURL 读取配置的，就能实现通过配置调用不同的服务器地址
};
